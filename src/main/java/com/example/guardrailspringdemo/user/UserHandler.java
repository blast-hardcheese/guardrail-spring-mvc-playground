/*
 * This file was generated by Guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
*/
package com.example.guardrailspringdemo.user;

import java.util.Optional;
import java.util.concurrent.CompletionStage;
import javax.validation.constraints.NotNull;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.async.DeferredResult;
import org.springframework.web.multipart.MultipartFile;
import com.example.guardrailspringdemo.*;
import com.example.guardrailspringdemo.definitions.*;

public interface UserHandler {

    abstract class CreateUserResponse {

        private final int statusCode;

        CreateUserResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class Ok extends CreateUserResponse {

            private Ok() {
                super(200);
            }
        }

        public static final Ok Ok = new Ok();
    }

    abstract class CreateUsersWithArrayInputResponse {

        private final int statusCode;

        CreateUsersWithArrayInputResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class Ok extends CreateUsersWithArrayInputResponse {

            private Ok() {
                super(200);
            }
        }

        public static final Ok Ok = new Ok();
    }

    abstract class CreateUsersWithListInputResponse {

        private final int statusCode;

        CreateUsersWithListInputResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class Ok extends CreateUsersWithListInputResponse {

            private Ok() {
                super(200);
            }
        }

        public static final Ok Ok = new Ok();
    }

    abstract class LoginUserResponse {

        private final int statusCode;

        LoginUserResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class Ok extends LoginUserResponse {

            private final String entityBody;

            private Ok(final String entityBody) {
                super(200);
                this.entityBody = entityBody;
            }

            public String getEntityBody() {
                return this.entityBody;
            }
        }

        public static class BadRequest extends LoginUserResponse {

            private BadRequest() {
                super(400);
            }
        }

        public static final BadRequest BadRequest = new BadRequest();

        public static Ok Ok(final String entityBody) {
            return new Ok(entityBody);
        }
    }

    abstract class LogoutUserResponse {

        private final int statusCode;

        LogoutUserResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class Ok extends LogoutUserResponse {

            private Ok() {
                super(200);
            }
        }

        public static final Ok Ok = new Ok();
    }

    abstract class GetUserByNameResponse {

        private final int statusCode;

        GetUserByNameResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class Ok extends GetUserByNameResponse {

            private final com.example.guardrailspringdemo.definitions.User entityBody;

            private Ok(final com.example.guardrailspringdemo.definitions.User entityBody) {
                super(200);
                this.entityBody = entityBody;
            }

            public com.example.guardrailspringdemo.definitions.User getEntityBody() {
                return this.entityBody;
            }
        }

        public static class BadRequest extends GetUserByNameResponse {

            private BadRequest() {
                super(400);
            }
        }

        public static class NotFound extends GetUserByNameResponse {

            private NotFound() {
                super(404);
            }
        }

        public static final BadRequest BadRequest = new BadRequest();

        public static final NotFound NotFound = new NotFound();

        public static Ok Ok(final com.example.guardrailspringdemo.definitions.User entityBody) {
            return new Ok(entityBody);
        }
    }

    abstract class UpdateUserResponse {

        private final int statusCode;

        UpdateUserResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class BadRequest extends UpdateUserResponse {

            private BadRequest() {
                super(400);
            }
        }

        public static class NotFound extends UpdateUserResponse {

            private NotFound() {
                super(404);
            }
        }

        public static final BadRequest BadRequest = new BadRequest();

        public static final NotFound NotFound = new NotFound();
    }

    abstract class DeleteUserResponse {

        private final int statusCode;

        DeleteUserResponse(final int statusCode) {
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return this.statusCode;
        }

        public static class BadRequest extends DeleteUserResponse {

            private BadRequest() {
                super(400);
            }
        }

        public static class NotFound extends DeleteUserResponse {

            private NotFound() {
                super(404);
            }
        }

        public static final BadRequest BadRequest = new BadRequest();

        public static final NotFound NotFound = new NotFound();
    }

    CompletionStage<UserHandler.CreateUserResponse> createUser(
            final com.example.guardrailspringdemo.definitions.User body);

    CompletionStage<UserHandler.CreateUsersWithArrayInputResponse> createUsersWithArrayInput(
            final java.util.List<com.example.guardrailspringdemo.definitions.User> body);

    CompletionStage<UserHandler.CreateUsersWithListInputResponse> createUsersWithListInput(
            final java.util.List<com.example.guardrailspringdemo.definitions.User> body);

    CompletionStage<UserHandler.LoginUserResponse> loginUser(final String username, final String password);

    CompletionStage<UserHandler.LogoutUserResponse> logoutUser();

    CompletionStage<UserHandler.GetUserByNameResponse> getUserByName(final String username);

    CompletionStage<UserHandler.UpdateUserResponse> updateUser(final String username,
            final com.example.guardrailspringdemo.definitions.User body);

    CompletionStage<UserHandler.DeleteUserResponse> deleteUser(final String username);
}
