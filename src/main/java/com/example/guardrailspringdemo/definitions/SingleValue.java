/*
 * This file was generated by Guardrail (https://github.com/twilio/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
*/
package com.example.guardrailspringdemo.definitions;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Optional;
import static java.util.Objects.requireNonNull;

@JsonIgnoreProperties(ignoreUnknown = true)
public class SingleValue {

    @JsonProperty("id")
    private final Optional<Long> id;

    @JsonCreator
    protected SingleValue(@JsonProperty("id") final Optional<Long> id) {
        super();
        this.id = id == null ? Optional.empty() : id;
    }

    public Optional<Long> getId() {
        return this.id;
    }

    @Override
    public String toString() {
        return "SingleValue{" + "id=" + getId() + "}";
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        final SingleValue other = (SingleValue) o;
        return getId().equals(other.getId());
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(getId());
    }

    public static class Builder {

        private Optional<Long> id = Optional.empty();

        public Builder() {
        }

        public Builder(final SingleValue template) {
            this.id = template.getId();
        }

        public Builder withId(final long id) {
            this.id = Optional.of(id);
            return this;
        }

        public Builder withId(final Optional<Long> optionalId) {
            this.id = requireNonNull(optionalId, "optionalId is required");
            return this;
        }

        public SingleValue build() {
            requireNonNull(this.id, "this.id is required");
            return new SingleValue(this.id);
        }
    }
}
